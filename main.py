import json
import os
import sys
from datetime import datetime
import apk_status
import telebot
import threading
import time
from operator_changes import changes
from requests.exceptions import ReadTimeout



operators = ("EFT", "–ì–ö–£ –†–µ—Å—É—Ä—Å—ã –Ø–º–∞–ª–∞ 2", "–ì–ö–£ –†–µ—Å—É—Ä—Å—ã –Ø–º–∞–ª–∞ 1", "–ú–∏–Ω—Ü–∏—Ñ—Ä—ã –ß—É–≤–∞—à–∏–∏", "–¶–¢–ò–ü–ö", "–ú–û–ë–¢–ò", "IGS",
             "–†–æ—Å—Ç–µ—Ö–∏–Ω–≤–µ–Ω—Ç–∞—Ä–∏–∑–∞—Ü–∏—è", "–†–æ—â–∏–Ω–æ", "–ú–æ—Å–≥–æ—Ä–≥–µ–æ—Ç—Ä–µ—Å—Ç", "–¢–∞—Ç–Ω–µ—Ñ—Ç—å", "–¶–ò–û–ì–î", "–ö–ü–§–£",
             "–ì–ï–ö–°–ê–ì–û–ù", "–¶–ì–ö–∏–ò–ü–î", "–ü–†–ò–ù", "–õ–∏–ø–µ—Ü–∫–æ–±–ª—Ç–µ—Ö–∏–Ω–≤–µ–Ω—Ç–∞—Ä–∏–∑–∞—Ü–∏—è", "–¢–ù–¶ –†–ë", "–ì–°–ò", "–ò–ü–ì", "–¶–ö–û–∏–ú–ù")

non_mes = True
dis_noti = True
timelt = '17' # –†–∞–±–æ—á–µ–µ –≤—Ä–µ–º—è
timegt = '9' # –†–∞–±–æ—á–µ–µ –≤—Ä–µ–º—è

if __name__ == '__main__':
    API_TOKEN = None
    bot = telebot.TeleBot(API_TOKEN)
    chat_id = None # id chata, –º–æ–∂–Ω–æ –ø—Ä–æ–ø–∏—Å–∞—Ç—å message.message_id –∏ –¥–æ–ª–∂–µ–Ω –±—É–¥–µ—Ç —Ä–∞–±–∞–æ—Ç–∞—Ç—å –≤ –ª–∏—á–Ω—ã–π –¥–∏–∞–ª–æ–≥–∞—Ö
    state = True


    def timer() -> None:
        """
        –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∑–∞–∫–æ–Ω—á–∏–ª—Å—è –ª–∏ —Ä–∞–±–æ—á–π –¥–µ–Ω—å, –µ—Å–ª–∏ –¥–∞, —Ç–æ –±–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ –±–µ–∑–∑–≤—É—á–Ω–æ–º —Ä–µ–∂–∏–º–µ.
        :return: None
        """
        global dis_noti, timegt, timelt
        while True:
            now = datetime.now()
            current_time = now.strftime("%H")
            w_day = now.strftime("%a")
            if w_day == 'Fri':
                timelt = '16'
            elif w_day == 'Sun' or w_day == 'Sat':
                dis_noti = True
                time.sleep(43200)
                continue
            if int(timegt) < int(current_time) < int(timelt):
                dis_noti = False
            time.sleep(3600)


    def check_stat_apk() -> None:
        """
        –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ê–ü–ö –§–°–ì–°.
        –ï—Å—Ç—å 2 —Ä–µ–∂–∏–º–∞:
            if non_mes is True:
                —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ –æ–±—ã—á–Ω–æ–º —Ä–µ–∂–∏–º–µ
            else:
                –∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏—è –≤ –∞—Ä—Ö–∏–≤, –∫–æ—Ç–æ—Ä—ã–π –≤—ã–¥–∞–µ—Ç –ø–æ—Å–ª–µ –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏—è –≤ –æ–±—ã—á–Ω—ã–π —Ä–µ–∂–∏–º
        :return: None
        """
        status_arch = []
        while True:
            if non_mes:
                if len(status_arch) > 0: # –ï—Å–ª–∏ –∞—Ä—Ö–∏–≤ –Ω–µ –ø—É—Å—Ç–æ–π –≤—ã–≤–æ–¥–∏—Ç –±–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –≤—Å–µ –¥–∞–Ω–Ω—ã–µ
                    try:
                        bot.send_message(chat_id, '\n'.join(status_arch) + '\n#–∫–æ—Å—è–∫–∏–∞–ø–∫', disable_notification=dis_noti)
                    except telebot.apihelper.ApiTelegramException: # –ï—Å–ª–∏ –¥–∞–Ω–Ω—ã—Ö —Å–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –æ—Ç–¥–∞–µ—Ç —Ç–µ–∫—Ç–æ–≤—ã–π —Ñ–∞–π–ª —Å–æ –≤—Å–µ–º–∏ —Å—Ç–∞—Ç—É—Å–∞–º–∏
                        if not os.path.exists('Change_files'):
                            os.mkdir('Change_files')
                        text = '\n'.join(status_arch)
                        with open('Change_files/log.txt', 'w') as txt_f:
                            txt_f.write(text)
                            bot.send_message(message.chat.id, '–í–∏–¥–∏–º–æ –æ—à–∏–±–æ–∫ –±—ã–ª–æ —Å–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ, —Ç–∞–∫ —á—Ç–æ –≤–æ—Ç –≤–∞–º –ª–æ–≥–∏.')
                            bot.send_document(message.chat.id, document=file, disable_notification=dis_noti)
                    status_arch = [] # –û–±–Ω—É–ª—è–µ–º –∞—Ä—Ö–∏–≤
                status = apk_status.stat() # –ü–æ–ª—É—á–∞–µ—Ç —Å—Ç–∞—Ç—É—Å –§–°–ì–°
                if len(status) > 0: # –ï—Å–ª–∏ –µ—Å—Ç—å –æ—à–∏–±–∫–∞ –≤—ã–≤–æ–¥–∏—Ç –µ–µ –∏ —Å–ª–∏–ø–∞–µ—Ç—Å—è –Ω–∞ 15 –º–∏–Ω—É—Ç
                    bot.send_message(chat_id, '\n'.join(status) + '\n#–∫–æ—Å—è–∫–∞–ø–∫', disable_notification=dis_noti)
                    print('–°—Ç–∞—Ç—É—Å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω')
                    time.sleep(900)
                else: # –ï—Å–ª–∏ –æ—à–∏–±–∫–∏ –Ω–µ—Ç —É—Ö–æ–¥–∏—Ç –≤ —Å–ª–∏–ø 6 –º–∏–Ω—É—Ç
                    time.sleep(360)
            else:
                stat_l = apk_status.stat()
                if len(stat_l) > 0:
                    print('–ó–∞–ø–∏—Å–∞–ª –≤ –∞—Ä—Ö–∏–≤')
                    now = datetime.now()
                    current_time = now.strftime("%H:%M:%S")
                    status_arch.append(str(current_time) + ':\n' + '\n'.join(stat_l))
                else:
                    time.sleep(360)


    def check_message() -> None:
        """
        –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–∞–±–æ—Ç—ã –Ω–∞ –æ—Ç–¥–ª–µ—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ—Å—Ç—É–ø–∞—é—â–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
        :return: None
        """
        @bot.message_handler(commands=['start'])
        def mute(message): # –ó–∞–ø—É—Å–∫–∞–µ—Ç –±–æ—Ç–∞, –≤–∫–ª—é—á–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è

            global non_mes
            non_mes = False
            bot.send_message(message.chat.id, '–Ø –Ω–∞—á–∞–ª —Ä–∞–±–æ—Ç–∞—Ç—å', disable_notification=dis_noti)
        @bot.message_handler(commands=['mute'])
        def mute(message): # –í—ã–∫–ª—é—á–∞–µ—Ç —É–≤–¥–æ–º–ª–µ–Ω–∏—è –±–æ—Ç–∞ –æ —Ä–∞–±–æ—Ç–µ
            global non_mes
            non_mes = False
            bot.send_message(message.chat.id, '–ú–æ–ª—á—É ü§´', disable_notification=dis_noti)

        @bot.message_handler(commands=['unmute']) # –í–∫–ª—é—á–∞–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ–±—Ä–∞—Ç–æ–Ω–æ
        def unmute(message):
            global non_mes
            non_mes = True
            bot.send_message(message.chat.id, '–©–∞—Å –≤—Å—ë —Ä–∞—Å—Å–∫–∞–∂—É', disable_notification=dis_noti)

        @bot.message_handler(commands=['restart']) # –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ—Ç –±–æ—Ç–∞
        def restart(message):
            bot.send_message(message.chat.id, '–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞—é', disable_notification=dis_noti)
            os.execv(sys.executable, [sys.executable] + sys.argv)

        @bot.message_handler(commands=['end']) # –í—ã–∫–ª—é—á–∞–µ—Ç –±–æ—Ç–∞
        def kill_—Üapk(message):
            bot.send_message(message.chat.id, '–ù—É –≤—Å—ë —É—Ö–æ–∂—É, —á—ë –±—É—Ö—Ç–µ—Ç—å —Ç–æ', disable_notification=dis_noti)
            thread1.join(timeout=1)
            bot.stop_polling()

        @bot.message_handler(commands=['changeop']) # –î–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–π –±–æ—Ç–∞ –≤—ã–≤–æ–¥–∏—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞–º–∏
        def changer(message):
            markup = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True, selective=True) # selective –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Ç–æ–ª—å–∫–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –∫–æ—Ç–æ—Ä—ã–π –µ–µ –∑–∞–ø—Ä–æ—Å–∏–ª
            for index, operator in enumerate(operators):
                if index != 0 and index % 2 != 0:
                    continue
                if index + 1 < len(operators):
                    op_button1 = telebot.types.KeyboardButton(operators[index])
                    op_button2 = telebot.types.KeyboardButton(operators[index + 1])
                    markup.add(op_button1, op_button2)
            hide_button = telebot.types.KeyboardButton("–£–±—Ä–∞—Ç—å –∫–Ω–æ–ø–∫–∏")
            markup.add(hide_button)
            bot.send_message(chat_id=message.chat.id, text='–í—ã–±–µ—Ä–∏ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞', reply_to_message_id=message.message_id,
                             reply_markup=markup, disable_notification=dis_noti)



        @bot.message_handler(commands=['help']) # –í—ã–≤–æ–¥–∏—Ç –ø–æ–º–æ—â—å
        def helper(message):
            bot.send_message(message.chat.id,
                             '/restart - –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ –±–æ—Ç–∞\n/end - –æ—Ç—Ä—É–±–∏—Ç—å –±–æ—Ç–∞\n/changeop- –∏–∑–º–µ–Ω–µ–Ω–∏—è –æ–ø–µ—Ä—Ç–æ—Ä–æ–≤\n/status - —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ê–ü–ö\n/killapk - —Å—É–¥–Ω—ã–π –¥–µ–Ω—å –ê–ü–ö\n/mute - –ø—É—Å—Ç—å —É–º–æ–ª–∫–Ω–µ—Ç\n/unmute - –±—É–¥–µ—Ç –±–æ–ª—Ç–∞—Ç—å',
                             disable_notification=dis_noti)

        @bot.message_handler(commands=['status'])
        def status_apk(message): # –í—ã–≤–æ–¥–∏—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ê–ü–ö –§–°–ì–° –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –ø–æ –∑–∞–ø—Ä–æ—Å—É
            print(dis_noti)
            status = apk_status.stat()
            if len(status) > 0:
                bot.send_message(message.chat.id, '\n'.join(status) + '\n#–∫–æ—Å—è–∫–∞–ø–∫', disable_notification=dis_noti)
                print('–°—Ç–∞—Ç—É—Å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω')
            else:
                bot.send_message(message.chat.id, '–í—Å—ë –∫—Ä—É—Ç–æ', disable_notification=dis_noti)
                print('–ü—Ä–æ–±–ª–µ–º –Ω–µ—Ç')

        @bot.message_handler(content_types=['text'])
        def find_changes(message): # –û—Ç–∞—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ø–æ–ª—É—á–∞–µ–º—ã–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            hide = telebot.types.ReplyKeyboardRemove()
            if message.text == "–£–±—Ä–∞—Ç—å –∫–Ω–æ–ø–∫–∏": # –£–±–∏—Ä–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É, –∫ —Å–æ–∂–∞–ª–µ–Ω–∏—é —Å–æ–æ–±—â–µ–Ω–∏–µ –≤–∏–¥—è—Ç –≤—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –µ—Å–ª–∏ –±–æ—Ç –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å –≤ —á–∞—Ç–µ
                bot.send_message(message.chat.id, '–ü—Ä—è—á—É –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É', reply_markup=hide, disable_notification=dis_noti)
            elif message.text in operators: # –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞ –≤ —Å–ø–∏—Å–∫–µ
                ch_list = changes(message.text)
                if ch_list is None: # –ï—Å–ª–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –Ω–µ –ø—Ä–æ—à–ª–∞ —É–≤–µ–¥–æ–º–ª—è—é—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —á—Ç–æ –ø—Ä–æ–±–ª–µ–º—ã —Å–æ –≤—Ö–æ–¥–æ–º
                    bot.send_message(message.chat.id, '–ü—Ä–æ–±–µ–ª–º—ã —Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–µ–π.', reply_markup=hide,
                                     disable_notification=dis_noti)
                elif len(ch_list) < 5: # –ï—Å–ª–∏ —Å–ø–∏—Å–∫–æ –∏–∑–º–µ–Ω–µ–Ω–∏—è –Ω–µ–±–æ–ª—å—à–æ–π –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—è –¥–∞–Ω–Ω—ã–µ —Å–ø–∏—Å–∫–æ–º
                    for index, el in enumerate(ch_list):
                        bot.send_message(message.chat.id, '{\n' + ',\n'.join(
                            [f'{key.capitalize()}: {value}' for key, value in el.items()]) + '\n}', reply_markup=hide,
                                         disable_notification=dis_noti)
                        time.sleep(1)
                else: # –ï—Å–ª–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–π –º–Ω–æ–≥–æ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç JSON —Å –∏–∑–º–µ–Ω–µ–Ω–∏—è–º–∏
                    if not os.path.exists('Change_files'):
                        os.mkdir('Change_files')
                    with open(f'Change_files/{message.text}_change.json', 'w') as file:
                        json.dump(ch_list, file, indent=4, ensure_ascii=False)
                        file.close()
                    with open(f'Change_files/{message.text}_change.json') as file:
                        bot.send_document(message.chat.id, document=file, reply_markup=hide,
                                          disable_notification=dis_noti)
                        file.close()


    thread1 = threading.Thread(target=check_stat_apk, daemon=True, name='Status_thread').start()
    thread2 = threading.Thread(target=check_message, daemon=True, name='Check_thread').start()
    thread3 = threading.Thread(target=timer, daemon=True, name='Time_thread').start()
    try:
        bot.polling(non_stop=state)
    except ReadTimeout as er:
        print(er, datetime.now())
    thread2.join(timeout=1)
    thread3.join(timeout=1)
    exit()
